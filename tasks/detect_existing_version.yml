---

# This utility aims to determine if there is some existing MariaDB version in use or not.
# If there is, it also tries to detect the container image that corresponds to that version.
#
# This utility is intentionally not in `tasks/util`, because if it were, it wouldn't be possible
# to include it in other roles via the include_role module: https://docs.ansible.com/ansible/latest/collections/ansible/builtin/include_role_module.html

- name: Initialize MariaDB version determination variables (default to empty)
  ansible.builtin.set_fact:
    mariadb_detection_mysql_upgrade_info_path: "{{ mariadb_data_path }}/mysql_upgrade_info"
    mariadb_detected_existing: false
    mariadb_detected_version: ""
    mariadb_detected_version_corresponding_container_image: ""

- name: Determine existing MariaDB version (check mysql_upgrade_info file)
  ansible.builtin.stat:
    path: "{{ mariadb_detection_mysql_upgrade_info_path }}"
  register: result_mysql_upgrade_info_stat

- ansible.builtin.set_fact:
    mariadb_detected_existing: true
  when: "result_mysql_upgrade_info_stat.stat.exists"

- name: Determine existing MariaDB version (read mysql_upgrade_info file)
  ansible.builtin.slurp:
    src: "{{ mariadb_detection_mysql_upgrade_info_path }}"
  register: result_mysql_upgrade_info
  when: mariadb_detected_existing | bool

- name: Determine existing MariaDB version (make sense of mysql_upgrade_info file)
  ansible.builtin.set_fact:
    mariadb_detected_version: "{{ result_mysql_upgrade_info['content'] | b64decode | replace('\n', '') }}"
  when: mariadb_detected_existing | bool

- name: Determine corresponding container image to detected version (assume default of latest)
  ansible.builtin.set_fact:
    mariadb_detected_version_corresponding_container_image: "{{ mariadb_container_image_latest }}"
  when: "mariadb_detected_version != ''"

- name: Determine corresponding container image to detected version (use 10.10, if detected)
  ansible.builtin.set_fact:
    mariadb_detected_version_corresponding_container_image: "{{ mariadb_container_image_v10_10 }}"
  when: " mariadb_detected_version.startswith('10.10.')"

- name: Determine corresponding container image to detected version (use 10.11, if detected)
  ansible.builtin.set_fact:
    mariadb_detected_version_corresponding_container_image: "{{ mariadb_container_image_v10_11 }}"
  when: "mariadb_detected_version.startswith('10.11.')"
