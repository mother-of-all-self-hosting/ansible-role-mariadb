# SPDX-FileCopyrightText: 2023 - 2024 Slavi Pantaleev
# SPDX-FileCopyrightText: 2025 Suguru Hirahara
#
# SPDX-License-Identifier: AGPL-3.0-or-later

---
# This utility aims to determine if there is some existing MariaDB version in use or not.
# If there is, it also tries to detect the container image that corresponds to that version.
#
# This utility is intentionally not in `tasks/util`, because if it were, it wouldn't be possible
# to include it in other roles via the include_role module: https://docs.ansible.com/ansible/latest/collections/ansible/builtin/include_role_module.html

- name: Initialize MariaDB version determination variables (default to empty)
  ansible.builtin.set_fact:
    mariadb_detection_mariadb_upgrade_info_path: "{{ mariadb_data_path }}/mariadb_upgrade_info"
    mariadb_detection_mysql_upgrade_info_path: "{{ mariadb_data_path }}/mysql_upgrade_info"
    mariadb_detected_existing: false
    mariadb_detected_version: ""
    mariadb_detected_version_corresponding_container_image: "{{ mariadb_container_image_latest }}"

- name: Determine existing MariaDB version (check mariadb_upgrade_info file)
  ansible.builtin.stat:
    path: "{{ mariadb_detection_mariadb_upgrade_info_path }}"
  register: result_mariadb_upgrade_info_stat

- name: Determine existing MariaDB version (check mysql_upgrade_info file)
  when: not result_mariadb_upgrade_info_stat.stat.exists
  ansible.builtin.stat:
    path: "{{ mariadb_detection_mysql_upgrade_info_path }}"
  register: result_mysql_upgrade_info_stat

- name: Detect existing MariaDB version path
  ansible.builtin.set_fact:
    mariadb_detected_existing_version_path: "{{ mariadb_detection_mariadb_upgrade_info_path if result_mariadb_upgrade_info_stat.stat.exists else (mariadb_detection_mysql_upgrade_info_path if result_mysql_upgrade_info_stat is defined and result_mysql_upgrade_info_stat.stat.exists else '') }}"

- name: Run if the existing MariaDB version path was detected
  when: mariadb_detected_existing_version_path != ''
  block:
    - name: Set the fact that existing MariaDB was detected
      ansible.builtin.set_fact:
        mariadb_detected_existing: true

    - name: Determine existing MariaDB version (read mysql_upgrade_info file)
      ansible.builtin.slurp:
        src: "{{ mariadb_detected_existing_version_path }}"
      register: result_mariadb_upgrade_info

    - name: Determine existing MariaDB version (make sense of mysql_upgrade_info file)
      ansible.builtin.set_fact:
        mariadb_detected_version: "{{ result_mariadb_upgrade_info['content'] | b64decode | replace('\n', '') }}"

    - name: Determine container image corresponding to detected version (use 10.10, if detected)
      ansible.builtin.set_fact:
        mariadb_detected_version_corresponding_container_image: "{{ mariadb_container_image_v10_10 }}"
      when: " mariadb_detected_version.startswith('10.10.')"

    - name: Determine container image corresponding to detected version (use 10.11, if detected)
      ansible.builtin.set_fact:
        mariadb_detected_version_corresponding_container_image: "{{ mariadb_container_image_v10_11 }}"
      when: "mariadb_detected_version.startswith('10.11.')"

    - name: Determine container image corresponding to detected version (use 11.1, if detected)
      ansible.builtin.set_fact:
        mariadb_detected_version_corresponding_container_image: "{{ mariadb_container_image_v11_1 }}"
      when: "mariadb_detected_version.startswith('11.1.')"

    - name: Determine container image corresponding to detected version (use 11.2, if detected)
      ansible.builtin.set_fact:
        mariadb_detected_version_corresponding_container_image: "{{ mariadb_container_image_v11_2 }}"
      when: "mariadb_detected_version.startswith('11.2.')"

    - name: Determine container image corresponding to detected version (use 11.4, if detected)
      ansible.builtin.set_fact:
        mariadb_detected_version_corresponding_container_image: "{{ mariadb_container_image_v11_4 }}"
      when: "mariadb_detected_version.startswith('11.4.')"

    - name: Determine container image corresponding to detected version (use 11.8, if detected)
      ansible.builtin.set_fact:
        mariadb_detected_version_corresponding_container_image: "{{ mariadb_container_image_v11_8 }}"
      when: "mariadb_detected_version.startswith('11.8.')"

    - name: Determine container image corresponding to detected version (use 12.0, if detected)
      ansible.builtin.set_fact:
        mariadb_detected_version_corresponding_container_image: "{{ mariadb_container_image_v12_0 }}"
      when: "mariadb_detected_version.startswith('12.0.')"
