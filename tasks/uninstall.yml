# SPDX-FileCopyrightText: 2023 Slavi Pantaleev
# SPDX-FileCopyrightText: 2025 Suguru Hirahara
#
# SPDX-License-Identifier: AGPL-3.0-or-later

---
- name: Check existence of MariaDB systemd service
  ansible.builtin.stat:
    path: "{{ devture_systemd_docker_base_systemd_path }}/{{ mariadb_identifier }}.service"
  register: mariadb_service_stat

- name: Uninstall MariaDB systemd service and scripts
  when: mariadb_service_stat.stat.exists | bool
  block:
    - name: Ensure MariaDB systemd service is stopped
      ansible.builtin.service:
        name: "{{ mariadb_identifier }}"
        state: stopped
        enabled: false
        daemon_reload: true

    - name: Ensure MariaDB systemd service does not exist
      ansible.builtin.file:
        path: "{{ devture_systemd_docker_base_systemd_path }}/{{ mariadb_identifier }}.service"
        state: absent

    - name: Ensure MariaDB support files do not exist
      ansible.builtin.file:
        path: "{{ mariadb_base_path }}/{{ item }}"
        state: absent
      with_items:
        - env
        - my.cnf

    - name: Ensure MariaDB scripts do not exist
      ansible.builtin.file:
        path: "{{ mariadb_bin_path }}"
        state: absent

    - name: Ensure MariaDB local data path does not exist if empty
      ansible.builtin.command:
        cmd: "rmdir {{ mariadb_data_path }}"
      register: mariadb_data_path_deletion_result
      changed_when: mariadb_data_path_deletion_result.rc == 0
      failed_when: false

    - name: Ensure MariaDB base path does not exist if empty
      ansible.builtin.command:
        cmd: "rmdir {{ mariadb_base_path }}"
      register: mariadb_base_path_deletion_result
      changed_when: mariadb_base_path_deletion_result.rc == 0
      failed_when: false

    - name: Ensure MariaDB container network does not exist via community.docker.docker_network
      when: devture_systemd_docker_base_container_network_creation_method == 'ansible-module'
      community.docker.docker_network:
        name: "{{ mariadb_container_network }}"
        state: absent

    - name: Ensure MariaDB container network does not exist via ansible.builtin.command
      when: devture_systemd_docker_base_container_network_creation_method == 'command'
      ansible.builtin.command:
        cmd: >-
          {{ devture_systemd_docker_base_host_command_docker }} network rm
          {{ mariadb_container_network }}
      register: network_deletion_result
      changed_when: mariadb_container_network in network_deletion_result.stdout

- name: Check existence of MariaDB local data path
  ansible.builtin.stat:
    path: "{{ mariadb_data_path }}"
  register: mariadb_data_path_stat

# We just want to notify the user. Deleting data is too destructive.
- name: Notify if MariaDB local data remains
  when: mariadb_data_path_stat.stat.exists | bool
  ansible.builtin.set_fact:
    devture_playbook_runtime_messages_list: |
      {{
        devture_playbook_runtime_messages_list | default([])
        +
        [
          "Note: You are not using a local MariaDB database, but some old data remains from before in `" + mariadb_data_path + "`. Feel free to delete it."
        ]
      }}
